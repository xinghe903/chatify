// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"logic/internal/biz"
	"logic/internal/conf"
	"logic/internal/data"
	"logic/internal/server"
	"logic/internal/service"
)

import (
	_ "go.uber.org/automaxprocs"
)

// Injectors from wire.go:

// wireApp init kratos application.
func wireApp(bootstrap *conf.Bootstrap, logger log.Logger) (*kratos.App, func(), error) {
	dataData, cleanup, err := data.NewData(bootstrap, logger)
	if err != nil {
		return nil, nil, err
	}
	userRepo := data.NewUserRepo(dataData, logger)
	cacheRepo := data.NewCache(dataData)
	pushRepo, cleanup2 := data.NewPushServiceClient(bootstrap, logger)
	logic := biz.NewLogic(logger, userRepo, cacheRepo, pushRepo, bootstrap)
	logicService := service.NewLogicService(logic)
	grpcServer := server.NewGRPCServer(bootstrap, logicService, logger)
	app := newApp(logger, grpcServer)
	return app, func() {
		cleanup2()
		cleanup()
	}, nil
}
