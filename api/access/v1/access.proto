syntax = "proto3";

package access.v1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "im/v1/message.proto";

option go_package = "api/access/v1;v1";


// AccessService 提供 Access 节点的管理与消息下发接口
service AccessService {
  // 【核心】Push 服务调用此接口，向指定连接推送消息
  // 如果连接不存在或已断开，返回 FAILED_PRECONDITION
  rpc PushMessage(PushMessageRequest) returns (PushMessageResponse);
}

// 连接-消息映射
// message ConnectionMessage {
//   string connection_id = 1; // 服务ID（Access 内部唯一）
//   repeated im.v1.BaseMessage message = 2; // 对应连接的消息体  max size: 1000
// }

// Push 服务请求下发消息
message PushMessageRequest {
  string connection_id = 1; // 服务ID（Access 内部唯一）
  repeated im.v1.BaseMessage message = 2; // 对应连接的消息体  max size: 1000
}

// 下发结果
message PushMessageResponse {
  enum Code {
    UNSUPPORT = 0;  // 不支持
    CONN_NOT_FOUND = 1;        // 连接不存在
    ALL_SUCCESS = 2;      // 所有消息发送成功
    ALL_FAILED = 3;        // 所有消息发送失败
    PARTIAL_SUCCESS = 4;       // 部分消息发送成功
    INTERNAL = 5;         // 内部错误
  }

  Code code = 1;
  string message = 2;     // 错误描述
  repeated string failed_message_ids = 3;
  repeated string success_message_ids = 4;
}