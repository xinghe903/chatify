syntax = "proto3";

package access.v1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "im/v1/message.proto";

option go_package = "api/access/v1;v1";


// AccessService 提供 Access 节点的管理与消息下发接口
service AccessService {
  // 【核心】Push 服务调用此接口，向指定连接推送消息
  // 如果连接不存在或已断开，返回 FAILED_PRECONDITION
  rpc PushMessage(PushMessageRequest) returns (PushMessageResponse);
}

// 连接-消息映射
message ConnectionMessage {
  string connection_id = 1; // 目标连接 ID（Access 内部唯一）
  repeated im.v1.BaseMessage message = 2; // 对应连接的消息体  max size: 1000
}

// Push 服务请求下发消息
message PushMessageRequest {
  repeated ConnectionMessage connection_messages = 1; // 连接-消息映射列表
}

// 下发结果
message PushMessageResponse {
  enum Code {
    OK = 0;
    NOT_FOUND = 1;        // 连接不存在
    UNAVAILABLE = 2;      // 节点不可用（如正在关闭）
    FAILED_PRECONDITION = 3; // 前置条件失败（如用户已下线）
    INTERNAL = 4;         // 内部错误
  }

  Code code = 1;
  string message = 2;     // 错误描述
}